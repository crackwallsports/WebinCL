#+TITLE: CL Web Test
#+AUTHOR: Xt3

* Common Lisp -> Web Test
- Prepare
  - Install: Emacs, Roswell(Slime, Quickload), CCL|SBCL
  - Package
    #+BEGIN_SRC lisp
(ql:quickload :caveman2)
    #+END_SRC
- Creat Project
  #+BEGIN_SRC lisp
(caveman2:make-project #P"~/.roswell/local-projects/webtest"
                       :author "Xt3")
  #+END_SRC
- Run (-> http://localhost:30000)
  #+BEGIN_SRC lisp
(ql:quickload :webtest)

(webtest:start :port 30000) 
;; (webtest:start :server :hunchentoot :port 8080)
;; (webtest:start :server :woo :port 8080)
(webtest:stop)
  #+END_SRC
- 流程
  - 修改 Template 下文件 直接刷新浏览器就行
  - 修改其它文件 需要: (ql:quickload :webtest) 然后刷浏览器

** .asd
- [[./webtest.asd][webtest.asd]]
** Routes
- Routes
  - 首页 index : /
    - 登录 login : /login -> /home 
      - 主页 home : /home -logout-> /
    - 注册 register : /register -> /login
- [[src/web.lisp][src/web.lisp]]
- Learn Test
  #+BEGIN_SRC lisp
;; (setf (response-body *response*) ">>>>")
;; TEST
;; GET /test/name?name=3
(defroute "/test/:name" (&key |name| name)
  #?"?name=${|name|}\n${name}")
(defroute ("/test/:name" :method :GET) (&key |name| name)
  #?"?name=${|name|}\n${name}")

;; GET & POST
(defroute ("/test/login") ()
  (webtest.base:->html
   '((form (:method "POST" :action "/test/login")
      (label () "用户名")
      (input (:name "usr")) (br)
      (button (:type "submit") "提交")))))
(defroute ("/test/login" :method :POST) (&key |usr|)
  ;;
  ;; (webtest.base:->html
  ;;  `((p () ,#?"欢迎 ${|usr|}")))
  ;;
  
  (let* ((pars (request-parameters *request*))
         (usr (cdr (assoc "usr" pars :test #'string=))))
    #?"pars=${pars} usr=${usr}"))

;; (defroute "/test/:name" (&rest params &key name)
;;   #?"name=${name}\nparams=${params} "
;;   )
;; 
;; (defroute "/test/*/and/*" (&key splat)
;;   #?"splat=${splat}"
;;   )
;; 
;; /test/download/hi.pdf
;; (defroute "/test/download/*.*" (&key splat)
;;   #?"splat=${splat}"
;;   )

;; Regexp
(defroute ("/test/([\\w]+)" :regexp t) (&key captures)
  #?"captures=${captures}")

;; Req & Res
(defroute "/test/rr" ()
  (webtest.base:->html
   `((pro () ,#?"req=${*request*}")
     (p () ,#?"res=${*response*}"))))

;; Session
(defroute "/test/counter" ()
  (format nil "~A times." (incf (gethash :counter *session* 0))))

;; (next-route)
;; (defroute "/*.json" ()
;;   (setf (getf (response-headers *response*) :content-type) "application/json")
;;   (next-route))
;; (defroute "/user.json" () ...)
;; (defroute "/search.json" () ...)
;; (defroute ("/new.json" :method :POST) () ...)

;; redirect
(defroute "/test/redirect" ()
  ;; (redirect "https://www.somewhere.com")
  (redirect "/test"))

;; (throw-code 403)
  
  #+END_SRC
** Views
- [[./src/view.lisp][src/view.lisp]]
- [[./src/base.lisp][src/base.lisp]]
*** Template
- [[./templates/layout.lisp][layout.lisp]]
- [[./templates/index.lisp][index.lisp]]
- [[./templates/register.lisp][register.lisp]]
** DB
- src/db.lisp

* Copyright

Copyright (c) 2017 Xt3


